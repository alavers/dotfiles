#zshrc profiling
#zmodload zsh/zprof

source $HOME/antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

# Bundles from the default repo (robbyrussell's oh-my-zsh).
#export NVM_NO_USE=true
# antigen bundle lukechilds/zsh-nvm
antigen bundle jonmosco/kube-ps1
antigen bundle zsh-users/zsh-autosuggestions
#antigen bundle pyenv
antigen bundle git
# antigen bundle docker
antigen bundle fasd
# antigen bundle kubectl
#antigen bundle tmuxinator
#antigen bundle lein
# antigen bundle command-not-found

# Syntax highlighting bundle.
#antigen bundle zsh-users/zsh-syntax-highlighting

# Load the theme.
antigen theme avit

# Tell Antigen that you're done.
antigen apply

# Env vars go here
if [ -e ~/.vars ];then
    source ~/.vars 
fi

# Path vars
export GPG_TTY=$(tty)
export SHELL=$(which zsh)
export PATH=$HOME/Library/Android/sdk/platform-tools:$PATH
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH="$PATH:$HOME/.rvm/bin"

# fnm = fast node version manager
if [[ -x "$(command -v fnm)" ]]; then
    eval "$(fnm env --use-on-cd)"
fi

alias vim='nvim'
alias vimdiff='nvim -d'
alias cleanbranches='git branch --merged | grep -v "\*" | grep -v master | grep -v dev | xargs -n 1 git branch -d'

# Kubectl
alias podver="kubectl get pods -o=jsonpath='{range .items[*]}{\"\n\"}{.metadata.name}{\":\t\t\t\t\"}{range .spec.containers[*]}{.image}{\", \"}{end}{end}' | sort"
alias k8s-get-pod-uptime='(echo '\''POD_NAME BOOT_DATE'\''; kubectl get pods -o=jsonpath='\''{range .items[*]}{.metadata.name}{"\t"}{.status.containerStatuses[*].state.running.startedAt}{"\n"}{end}'\'' | sort -k2) | column -t'

alias restore-cursor="tput cnorm"
alias quiet="osascript -e \"set Volume 0.1\""
alias quieter="osascript -e \"set Volume 0.01\""

alias dps="docker ps --format \"table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Ports}}\""
alias dpsa="docker ps -a --format \"table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}\""

# Pretty unix timestamp
function tz {
    TZ=Canada/Eastern date -r $1
}

# Get current unix timetamp
function ts {
    echo $(date +%s)
}

# Run grep'd tests
function stg {
    local qw=\'
    eval mocha 'test/server/**/*.js' --grep $qw$@$qw
}
function stgd {
    local qw=\'
    eval LOG_LEVEL=debug mocha 'test/server/**/*.js' --grep $qw$@$qw
}

function swap()         
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}

function keys() {
    eval `ssh-agent -s`
    ssh-add --apple-use-keychain ~/.ssh/alavers@system42.net
    ssh-add --apple-use-keychain ~/.ssh/andrew+dieu@smooch.io
    ssh-add --apple-use-keychain ~/.ssh/andrew@smooch.io
    ssh-add --apple-use-keychain ~/.ssh/alavers@zendesk.com
}

alias saml="saml2aws login --duo-mfa-option=\"Duo Push\" --role $SMOOCH_INTERNAL_ARN --profile smooch-internal"
alias samlp="saml2aws login --duo-mfa-option=\"Duo Push\" --role $SMOOCH_PROD_ARN --profile smooch-prod"
alias samls="saml2aws login --duo-mfa-option=\"Duo Push\" --role $SANDBOX_ARN --profile default"

# https://gist.github.com/QinMing/364774610afc0e06cc223b467abe83c0
lazy_load() {
    # Act as a stub to another shell function/command. When first run, it will load the actual function/command then execute it.
    # E.g. This made my zsh load 0.8 seconds faster by loading `nvm` when "nvm", "npm" or "node" is used for the first time
    # $1: space separated list of alias to release after the first load
    # $2: file to source
    # $3: name of the command to run after it's loaded
    # $4+: argv to be passed to $3
    echo "Lazy loading $1 ..."

    # $1.split(' ') using the s flag. In bash, this can be simply ($1) #http://unix.stackexchange.com/questions/28854/list-elements-with-spaces-in-zsh
    # Single line won't work: local names=("${(@s: :)${1}}"). Due to http://stackoverflow.com/questions/14917501/local-arrays-in-zsh   (zsh 5.0.8 (x86_64-apple-darwin15.0))
    local -a names
    if [[ -n "$ZSH_VERSION" ]]; then
        names=("${(@s: :)${1}}")
    else
        names=($1)
    fi
    unalias "${names[@]}"
    . $2
    shift 2
    $*
}

group_lazy_load() {
    local script
    script=$1
    shift 1
    for cmd in "$@"; do
        alias $cmd="lazy_load \"$*\" $script $cmd"
    done
}

# Lazy load rvm
group_lazy_load $HOME/.rvm/scripts/rvm rvm tmuxinator irb rake rails

# Lazy load pyenv, 
pyenv() {
    eval "$(command pyenv init -)"
    pyenv "$@"
}

# FZF shell keybindings (CTRL-R and CTRL-T)
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS="--extended"

#zshrc profiling
#zprof

# Change prompt caret to skull when in prod context
caret() {
    [[ $KUBE_PS1_CONTEXT =~ "prod" ]] && echo "%{$fg[red]%}HOPE YOU KNOW WHAT THE FUCK YOU'RE DOING\n☠️" || echo "$"
}

k8s_namespace() {
    echo "%{$fg[yellow]%}$KUBECTL_NAMESPACE%{$resetcolor%}"
}

# avid theme PROMPT override for KUBE_PS1
KUBE_PS1_SEPARATOR=''
KUBE_PS1_NS_ENABLE=''
KUBE_PS1_PREFIX=''
KUBE_PS1_SUFFIX=''
PS1='
%{$fg[blue]%}${PWD/#$HOME/'~'}%{$reset_color%} $(kube_ps1) $(k8s_namespace) $(git_prompt_info) 
%{$fg[$CARETCOLOR]%}$(caret)%{$reset_color%} '

# Google cloud SDK completion
source "`brew --prefix`/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
source "`brew --prefix`/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

# Kubectl auto completion
# This does not work when run via zshrc for some reason
source <(kubectl completion zsh)
alias kc='source <(kubectl completion zsh)'
alias k='kubectl "--context=${KUBECTL_CONTEXT:-$(kubectl config current-context)}" ${KUBECTL_NAMESPACE/[[:alnum:]-]*/--namespace=${KUBECTL_NAMESPACE}}'

function kns { export KUBECTL_NAMESPACE=$* }

# export DOCKER_HOST=tcp://192.168.42.45:2375
export DOCKER_HOST=
export AWS_ENABLED=false

# BEGIN ZDI
# export AWS_ENABLED=true
# source /Users/alavers/git/zendesk/zdi/dockmaster/zdi.sh
# END ZDI
