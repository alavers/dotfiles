# zfetch is a tiny plugin manager
autoload -U "$DOTFILES/zsh/functions/zfetch"

# initialize autocomplete
autoload -U compinit add-zsh-hook
compinit

export GPG_TTY=$(tty)
export SHELL=$(which zsh)
export PATH=$HOME/Library/Android/sdk/platform-tools:$PATH
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH="$PATH:$HOME/.rvm/bin"

# env vars
if [ -e ~/.vars ];then
    source ~/.vars
fi

# vim aliases
alias vim='nvim'
alias vimdiff='nvim -d'

# git aliases https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git
alias gdca='git diff --cached'
alias cleanbranches='git branch --merged | grep -v "\*" | grep -v master | grep -v dev | xargs -n 1 git branch -d'

# docker aliases
alias dps="docker ps --format \"table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Ports}}\""
alias dpsa="docker ps -a --format \"table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}\""

# kubectl aliases
alias podver="kubectl get pods -o=jsonpath='{range .items[*]}{\"\n\"}{.metadata.name}{\":\t\t\t\t\"}{range .spec.containers[*]}{.image}{\", \"}{end}{end}' | sort"
alias k8s-get-pod-uptime='(echo '\''POD_NAME BOOT_DATE'\''; kubectl get pods -o=jsonpath='\''{range .items[*]}{.metadata.name}{"\t"}{.status.containerStatuses[*].state.running.startedAt}{"\n"}{end}'\'' | sort -k2) | column -t'
alias kc='source <(kubectl completion zsh)'
alias k='kubectl "--context=${KUBECTL_CONTEXT:-$(kubectl config current-context)}" ${KUBECTL_NAMESPACE/[[:alnum:]-]*/--namespace=${KUBECTL_NAMESPACE}}'

# pretty unix timestamp
function tz {
    TZ=Canada/Eastern date -r $1
}

# get current unix timetamp
function ts {
    echo $(date +%s)
}

function swap()         
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}

function keys() {
    eval `ssh-agent -s`
    ssh-add --apple-use-keychain ~/.ssh/alavers@system42.net
    ssh-add --apple-use-keychain ~/.ssh/alavers@zendesk.com
}

# fnm = fast node version manager
if [[ -x "$(command -v fnm)" ]]; then
    eval "$(fnm env --use-on-cd)"
fi

# https://gist.github.com/QinMing/364774610afc0e06cc223b467abe83c0
lazy_load() {
    # Act as a stub to another shell function/command. When first run, it will load the actual function/command then execute it.
    # E.g. This made my zsh load 0.8 seconds faster by loading `nvm` when "nvm", "npm" or "node" is used for the first time
    # $1: space separated list of alias to release after the first load
    # $2: file to source
    # $3: name of the command to run after it's loaded
    # $4+: argv to be passed to $3
    echo "Lazy loading $1 ..."

    # $1.split(' ') using the s flag. In bash, this can be simply ($1) #http://unix.stackexchange.com/questions/28854/list-elements-with-spaces-in-zsh
    # Single line won't work: local names=("${(@s: :)${1}}"). Due to http://stackoverflow.com/questions/14917501/local-arrays-in-zsh   (zsh 5.0.8 (x86_64-apple-darwin15.0))
    local -a names
    if [[ -n "$ZSH_VERSION" ]]; then
        names=("${(@s: :)${1}}")
    else
        names=($1)
    fi
    unalias "${names[@]}"
    . $2
    shift 2
    $*
}

group_lazy_load() {
    local script
    script=$1
    shift 1
    for cmd in "$@"; do
        alias $cmd="lazy_load \"$*\" $script $cmd"
    done
}

# Lazy load rvm
group_lazy_load $HOME/.rvm/scripts/rvm rvm tmuxinator irb rake rails

# Lazy load pyenv, 
pyenv() {
    eval "$(command pyenv init -)"
    pyenv "$@"
}

# FZF shell keybindings (CTRL-R and CTRL-T)
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS="--extended"

########################################################
# Completion
########################################################

# kubectl completion
source <(kubectl completion zsh)

# Google cloud SDK completion
source "`brew --prefix`/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
source "`brew --prefix`/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

########################################################
# Plugins
########################################################

export ZPLUGDIR="$CACHEDIR/zsh/plugins"
[[ -d "$ZPLUGDIR" ]] || mkdir -p "$ZPLUGDIR"
# array containing plugin information (managed by zfetch)
typeset -A plugins

zfetch mafredri/zsh-async async.plugin.zsh
zfetch zsh-users/zsh-autosuggestions
zfetch zsh-users/zsh-syntax-highlighting
zfetch Aloxaf/fzf-tab

source "$DOTFILES/zsh/utils.zsh"
source "$DOTFILES/zsh/prompt.zsh"

if [[ -a ~/.localrc ]]; then
    source ~/.localrc
fi
