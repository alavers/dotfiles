#zshrc profiling
#zmodload zsh/zprof

source /usr/local/share/antigen/antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

# Bundles from the default repo (robbyrussell's oh-my-zsh).
#export NVM_NO_USE=true
antigen bundle lukechilds/zsh-nvm
antigen bundle jonmosco/kube-ps1
#antigen bundle pyenv
antigen bundle git
antigen bundle docker
antigen bundle fasd
antigen bundle kubectl 
#antigen bundle tmuxinator
#antigen bundle kubectl 
#antigen bundle lein
#antigen bundle command-not-found

# Syntax highlighting bundle.
#antigen bundle zsh-users/zsh-syntax-highlighting

# Load the theme.
antigen theme avit

# Custom prompt
PROMPT='
$(_user_host)${_current_dir} $(git_prompt_info) $(_ruby_version)
%{$fg[$CARETCOLOR]%}$%{$resetcolor%} '

# Tell Antigen that you're done.
antigen apply

# Env vars go here
if [ -e ~/.vars ];then
    source ~/.vars 
fi

# Path vars
export PATH="/usr/local/sbin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/usr/local/rabbitmq_server-3.6.6/sbin:$PATH"
export PATH=$HOME/Library/Android/sdk/platform-tools:$PATH
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH="$PATH:$HOME/.rvm/bin"
PATH="/Users/andrew/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/Users/andrew/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/andrew/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/andrew/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/andrew/perl5"; export PERL_MM_OPT;

export EDITOR=nvim
export NODE_REPL_MODE=strict
export NODE_REPL_HISTORY_FILE=$HOME/.node_repl_history
export XDG_CONFIG_HOME=$HOME/.config
# export JAVA_HOME=`/usr/libexec/java_home -v 1.8`

# Make nvim pyenv stop complaning
export PYENV_ROOT=$HOME/.pyenv

# Smooch
export role=web

# tmuxinator
# source ~/.bin/tmuxinator.zsh

alias vim='nvim'
alias vimdiff='nvim -d'
alias fuck='$(thefuck $(fc -ln -1))'
alias such=git
alias very=git 
alias wow='git status'
alias j='python -m json.tool'
alias cleanbranches='git branch --merged | grep -v "\*" | grep -v master | grep -v dev | xargs -n 1 git branch -d'
alias heorku='heroku'
alias ctags="`brew --prefix`/bin/ctags"

# Silver searcher default ignore
alias agall='ag'
alias ag='agall --path-to-ignore ~/.ignore'

# Initialize fasd. This is needed for z to work
eval "$(fasd --init auto)"

# Firefox
alias ffwork="/Applications/Firefox.app/Contents/macOS/firefox --profile /Users/andrew/Library/Application\ Support/Firefox/Profiles/kzoer25m.work &"
alias ff="/Applications/Firefox.app/Contents/macOS/firefox --profile /Users/andrew/Library/Application\ Support/Firefox/Profiles/1kc81m9o.default &"

# Kubectl
alias podver="kubectl get pods -o=jsonpath='{range .items[*]}{\"\n\"}{.metadata.name}{\":\t\t\t\t\"}{range .spec.containers[*]}{.image}{\", \"}{end}{end}' | sort"
alias k8s-get-pod-uptime='(echo '\''POD_NAME BOOT_DATE'\''; kubectl get pods -o=jsonpath='\''{range .items[*]}{.metadata.name}{"\t"}{.status.containerStatuses[*].state.running.startedAt}{"\n"}{end}'\'' | sort -k2) | column -t'

alias restore-cursor="tput cnorm"
# alias z="fasd"
#
alias quiet="osascript -e \"set Volume 0.1\""
alias quieter="osascript -e \"set Volume 0.01\""

function pi { psc $* --profile smooch-internal }
function pp { psc $* --profile smooch-prod }
function peu { psc $* --profile smooch-eu }
function pz { psc $* --profile zdlt }

# Kubectl auto completion
if [ $commands[kubectl] ]; then source <(kubectl completion zsh); fi

# VSCode
code() {
    if [[ $# = 0 ]]
    then
        open -a "Visual Studio Code"
    else
        [[ $1 = /* ]] && F="$1" || F="$PWD/${1#./}"
        open -a "Visual Studio Code" --args "$F"
    fi
}

# Connect mongo
function connectmongo {
    export MONGODB_USER="andrew-test";
    export MONGODB_PASSWORD="SECRET pm.acl52.ubald-20180524";
    export MONGODB_HOST_PREFIX="prod-dump-dbcleanup-20180523";
    export MONGODB_DATABASE="smooch-prod";
    export MONGODB_HOST=$MONGODB_HOST_PREFIX"-shard-00-00-c8jvb.mongodb.net:27017,"$MONGODB_HOST_PREFIX"-shard-00-01-c8jvb.mongodb.net:27017,"$MONGODB_HOST_PREFIX"-shard-00-02-c8jvb.mongodb.net:27017/"$MONGODB_DATABASE"?ssl=true&replicaSet="$MONGODB_HOST_PREFIX"-shard-0&authSource=admin";
    source <(psc decrypt-env --profile smooch-internal --region us-east-1);
    export MONGODB_URL="mongodb://"$MONGODB_USER":"$MONGODB_PASSWORD"@"$MONGODB_HOST;
}


# Pretty unix timestamp
function tz {
    TZ=Canada/Eastern date -r $1
}

# Get current unix timetamp
function ts {
    echo $(date +%s)
}

# Run grep'd tests
function stg {
    local qw=\'
    eval mocha 'test/server/**/*.js' --grep $qw$@$qw
}

function stgd {
    local qw=\'
    eval LOG_LEVEL=debug mocha 'test/server/**/*.js' --grep $qw$@$qw
}

function swap()         
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}

function keys() {
    eval `ssh-agent -s`
    ssh-add -K ~/.ssh/alavers@system42.net
    ssh-add -K ~/.ssh/andrew+dieu@smooch.io
    ssh-add -K ~/.ssh/andrew@smooch.io
}

# https://gist.github.com/QinMing/364774610afc0e06cc223b467abe83c0
lazy_load() {
    # Act as a stub to another shell function/command. When first run, it will load the actual function/command then execute it.
    # E.g. This made my zsh load 0.8 seconds faster by loading `nvm` when "nvm", "npm" or "node" is used for the first time
    # $1: space separated list of alias to release after the first load
    # $2: file to source
    # $3: name of the command to run after it's loaded
    # $4+: argv to be passed to $3
    echo "Lazy loading $1 ..."

    # $1.split(' ') using the s flag. In bash, this can be simply ($1) #http://unix.stackexchange.com/questions/28854/list-elements-with-spaces-in-zsh
    # Single line won't work: local names=("${(@s: :)${1}}"). Due to http://stackoverflow.com/questions/14917501/local-arrays-in-zsh   (zsh 5.0.8 (x86_64-apple-darwin15.0))
    local -a names
    if [[ -n "$ZSH_VERSION" ]]; then
        names=("${(@s: :)${1}}")
    else
        names=($1)
    fi
    unalias "${names[@]}"
    . $2
    shift 2
    $*
}

group_lazy_load() {
    local script
    script=$1
    shift 1
    for cmd in "$@"; do
        alias $cmd="lazy_load \"$*\" $script $cmd"
    done
}

# Lazy load rvm
group_lazy_load $HOME/.rvm/scripts/rvm rvm tmuxinator irb rake rails

# Lazy load pyenv, 
pyenv() {
    eval "$(command pyenv init -)"
    pyenv "$@"
}

# FZF shell keybindings (CTRL-R and CTRL-T)
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS="--extended"
export FZF_DEFAULT_COMMAND='ag --hidden -g ""'

# node package dependencies update assist
# source /Users/andrew/git/dep-assist/alias-dep-assist.sh

#zshrc profiling
#zprof

# Change prompt caret to skull when in prod context
caret() {
    [[ $KUBE_PS1_CONTEXT =~ "prod" ]] && echo "%{$fg[red]%}HOPE YOU KNOW WHAT THE FUCK YOU'RE DOING\n☠️" || echo "$"
}

# avid theme PROMPT override for KUBE_PS1
KUBE_PS1_SEPARATOR=''
KUBE_PS1_NS_ENABLE=''
KUBE_PS1_PREFIX=''
KUBE_PS1_SUFFIX=''
PROMPT='
$(_user_host)${_current_dir} $(kube_ps1) $(git_prompt_info) 
%{$fg[$CARETCOLOR]%}$(caret)%{$resetcolor%} '
